{"version":3,"sources":["Component/LargeTextPaperSkeleton.js","Component/BarChart.js","Component/StatWrapper.js","Container/HK100Stat.js","Component/Modal.js","Component/CustomTable.js","Component/ScatterChart.js","Component/PredictTextField.js","Container/HK100Predict.js","Component/GeneralTable.js","Component/AnalyzeRunnerResult.js","Component/CompareRunnerResult.js","Component/ComparePredictMethod.js","Container/HK100CheckRanking.js","Container/HK1100PredictMyResult.js","Container/About.js","Container/Home.js","Component/Header.js","getLanguage.js","App.js","serviceWorker.js","i18n.js","index.js"],"names":["LargeTextPaperSkeleton","style","marginTop","Skeleton","width","height","marginBottom","BarChart","props","useTranslation","t","position","keys","unit","Object","dist","map","i","Math","round","marked","backgroundColor","item","index","hoverbackgroundColor","data","labels","datasets","label","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","values","Typography","variant","title","options","responsive","scales","xAxes","display","scaleLabel","labelString","yAxes","useStyles","makeStyles","tableWrapper","maxWidth","margin","padding","StyledTableCell","withStyles","theme","head","palette","common","black","color","white","body","fontSize","TableCell","StyledTableRow","root","action","hover","TableRow","StatWrapper","classes","Fragment","className","TableContainer","gutterBottom","Table","aria-label","TableHead","align","TableBody","mean","bg","sd","min","max","breakpoints","up","tab","minWidth","contentWrapper","wrapper","firstPaper","HK100","useTheme","useState","value","setValue","setDist","stat","setStat","setBg","useEffect","axios","get","then","response","Toolbar","Paper","elevation","Tabs","onChange","event","newValue","indicatorColor","textColor","scrollButtons","Tab","length","key","enableMouseEvents","axis","direction","onChangeIndex","DialogTitle","spacing","closeButton","right","top","grey","children","onClose","other","disableTypography","IconButton","onClick","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","Modal","fullScreen","useMediaQuery","down","open","handleClose","Dialog","aria-labelledby","id","dividers","src","alt","Button","autoFocus","CustomTable","React","setOpen","startIcon","index2","ScatterChart","data1","data2","x","y","paddingBottom","subtitle","textBottomMargin","PredictTextField","i18n","content","assumptionTitle","assumptionContent","methodName","Array","isArray","item2","intro","setIntro","findings","setFindings","methodResultData","setMethodResultData","methodRawResultData","setMethodRawResultData","animateHeight","Grid","container","xs","md","xl","adjtotaltime","GeneralTable","header","size","AnalyzeRunnerResult","runner","toFixed","paper","paperWarpper","doubleColumnWrapper","CompareRunnerResult","percentile","percentileMark","ranking","time","alignItems","sm","ComparePredictMethod","pastDataVar","setPastDataVar","chungVar","setChungVar","chungPlusVar","setChungPlusVar","runnerDataToAccMode","runnerData","pop","shift","formatTableConent","predicatedTime","AccumEPDistance","EPDistance","textDecoration","target","to","process","abs","equtaion","slope","tmp","reduce","accumulator","currentValue","tmpPastDataPredictMethod","tmpChungPredictMethod","pow","tmpChungPlusPredictMethod","resultWrapper","formgroup","textAlign","HK100CheckRanking","result","setResult","setPercentile","bib","setBib","fetching","setFetching","FormLabel","component","RadioGroup","defaultValue","name","FormControlLabel","disabled","control","Radio","TextField","e","helperText","fullWidth","endIcon","catch","error","console","log","alert","centered","probiTableWrapper","HK1100PredictMyResult","finishPoint","setFinishPoint","hour","setHour","setMin","eta","setEta","weighting","setWeigting","equation","arr","push","tmpWeighting","select","option","MenuItem","imgresponsive","href","background","gridItem","marginLeft","marginRight","navButton","justify","disableElevation","Link","lg","appBar","zIndex","drawer","flexShrink","drawerPaper","drawerContainer","overflow","appBarContent","homeName","flexGrow","Header","anchorEl","setAnchorEl","setDrawer","showmenu","handLangChange","val","changeLanguage","AppBar","edge","noWrap","varient","currentTarget","language","window","localStorage","i18nextLng","Menu","keepMounted","Boolean","Drawer","List","ListItem","button","ListItemIcon","ListItemText","primary","Divider","history","createBrowserHistory","createMuiTheme","typography","fontFamily","join","App","ThemeProvider","CssBaseline","path","exact","HK100Stat","HK100Predict","About","Home","location","hostname","match","resources","translation","en","zh","use","detector","initReactI18next","init","fallbackLng","interpolation","escapeValue","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.0531e831.chunk.js","sourcesContent":["\r\nimport React from 'react';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nexport default function LargeTextPaperSkeleton() {\r\n    return (\r\n        <div style={{ marginTop: '15px' }}>\r\n            <Skeleton width={'60%'} height={30} style={{ marginBottom: '15px' }} />\r\n            <Skeleton width={'60%'} height={30} style={{ marginBottom: '15px' }} />\r\n            <Skeleton width={'60%'} height={30} style={{ marginBottom: '15px' }} />\r\n            <Skeleton width={'60%'} height={30} style={{ marginBottom: '15px' }} />\r\n            <Skeleton width={'60%'} height={30} style={{ marginBottom: '15px' }} />\r\n            <Skeleton width={'40%'} height={30} style={{ marginBottom: '15px' }} />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nexport default function BarChart(props) {\r\n  const { t } = useTranslation();\r\n\r\n  if (props.position) {\r\n    let keys = props.unit === 'Hr' ? Object.keys(props.dist).map(i => i / 2 * 10 * 60) : Object.keys(props.dist).map(i => Math.round(i * 60))\r\n    let marked = false\r\n    var backgroundColor = keys.map((item, index) => {\r\n      if (props.position * 60 < item && !marked) {\r\n        marked = true\r\n        return \"red\"\r\n      }\r\n      return 'rgba(54,162,235,0.8)'\r\n    })\r\n    marked = false\r\n    var hoverbackgroundColor = keys.map((item, index) => {\r\n      if (props.position * 60 < item && !marked) {\r\n        marked = true\r\n        return \"red\"\r\n      }\r\n      return 'rgba(54,162,235,1)'\r\n    })\r\n  }\r\n  const data = props.dist && {\r\n    labels: props.unit === 'Hr' ? Object.keys(props.dist).map(i => Math.round(i / 2 * 10 * 10) / 10) : Object.keys(props.dist).map(i => Math.round(i * 60)),\r\n    datasets: [\r\n      {\r\n        label: 'Number of Runner',\r\n        backgroundColor: backgroundColor ? backgroundColor : 'rgba(54,162,235,0.8)',\r\n        borderColor: hoverbackgroundColor ? hoverbackgroundColor : 'rgba(54,162,235,1)',\r\n        borderWidth: 1,\r\n        hoverBackgroundColor: hoverbackgroundColor ? hoverbackgroundColor : 'rgba(54,162,235,1)',\r\n        hoverBorderColor: hoverbackgroundColor ? hoverbackgroundColor : 'rgba(54,162,235,1)',\r\n        data: Object.values(props.dist)\r\n      }\r\n    ]\r\n  };\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h5\" >\r\n        {props.title &&  props.title }\r\n      </Typography>\r\n      <Bar\r\n        data={data}\r\n        width={100}\r\n        height={50}\r\n        options={{\r\n          responsive: true,\r\n          scales: {\r\n            xAxes: [{\r\n              display: true,\r\n              scaleLabel: {\r\n                display: true,\r\n                labelString: `Time (in ${props.unit})`\r\n              },\r\n            }],\r\n            yAxes: [{\r\n              display: true,\r\n              scaleLabel: {\r\n                display: true,\r\n                labelString: 'Number of Runner'\r\n              }\r\n            }]\r\n          }\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport BarChart from \"./BarChart\"\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst useStyles = makeStyles({\r\n  \r\n    tableWrapper: {\r\n        maxWidth: 650,\r\n        margin: '0 auto',\r\n        padding: '50px 0'\r\n    },\r\n});\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: theme.palette.common.black,\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\nconst StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.action.hover,\r\n        },\r\n    },\r\n}))(TableRow);\r\n\r\nexport default function StatWrapper(props) {\r\n    const classes = useStyles();\r\n    const { t } = useTranslation();\r\n \r\n    return (\r\n        <React.Fragment>\r\n\r\n                <div className={classes.tableWrapper}>\r\n                    {props.data &&\r\n                        <TableContainer>\r\n                            <Typography variant=\"h3\" gutterBottom>\r\n                                {props.index === 'Overall' ? t('stat.Overall') : `${t(\"stat.Check Point\")} ${props.index} ${t(\"stat.to\")} ${props.index + 1}`}\r\n                            </Typography>\r\n                         \r\n                            <Table aria-label=\"simple table\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <StyledTableCell align=\"right\">Start - CP1</StyledTableCell >\r\n                                        <StyledTableCell align=\"right\">\r\n                                            {props.index === 'Overall' ? 'Time (Hr)' : 'Time (Min)'}\r\n                                        </StyledTableCell >\r\n                                        <StyledTableCell align=\"right\">Avg. Speed (km/h)</StyledTableCell >\r\n                                        <StyledTableCell align=\"right\">Avg. ADJ Speed (km/h)</StyledTableCell >\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    <StyledTableRow  >\r\n                                        <StyledTableCell align=\"right\">Mean</StyledTableCell >\r\n                                        {props.index === 'Overall' ?\r\n                                            <StyledTableCell align=\"right\">{Math.round(props.data.mean * 100) / 100}</StyledTableCell >\r\n                                            :\r\n                                            <StyledTableCell align=\"right\">{Math.round(props.data.mean * 60 * 100) / 100}</StyledTableCell >\r\n                                        }\r\n                                        <StyledTableCell align=\"right\">{props.bg.dist / props.data.mean}</StyledTableCell >\r\n                                        <StyledTableCell align=\"right\">{props.bg['effort point'] / props.data.mean}</StyledTableCell >\r\n                                    </StyledTableRow>\r\n                                    <StyledTableRow>\r\n                                        <StyledTableCell align=\"right\">SD</StyledTableCell >\r\n                                        <StyledTableCell align=\"right\">{Math.round(props.data.sd * 60 * 100) / 100}</StyledTableCell >\r\n                                        <StyledTableCell align=\"right\">NA</StyledTableCell >\r\n                                        <StyledTableCell align=\"right\">NA</StyledTableCell >\r\n                                    </StyledTableRow >\r\n                                    <StyledTableRow  >\r\n                                        <StyledTableCell align=\"right\">Min</StyledTableCell >\r\n                                        <StyledTableCell align=\"right\">{Math.round(props.data.min * 60 * 100) / 100}</StyledTableCell >\r\n                                        <StyledTableCell align=\"right\">{props.bg.dist / props.data.min}</StyledTableCell >\r\n                                        <StyledTableCell align=\"right\">{props.bg['effort point'] / props.data.min}</StyledTableCell >\r\n                                    </StyledTableRow >\r\n                                    <StyledTableRow  >\r\n                                        <StyledTableCell align=\"right\">Max</StyledTableCell >\r\n                                        <StyledTableCell align=\"right\">{Math.round(props.data.max * 60 * 100) / 100}</StyledTableCell >\r\n                                        <StyledTableCell align=\"right\">{props.bg.dist / props.data.max}</StyledTableCell >\r\n                                        <StyledTableCell align=\"right\">{props.bg['effort point'] / props.data.max}</StyledTableCell >\r\n                                    </StyledTableRow >\r\n                                    <StyledTableRow  >\r\n                                        <StyledTableCell align=\"right\">10%</StyledTableCell >\r\n                                        <StyledTableCell align=\"right\">{Math.round(props.data[0.1] * 60 * 100) / 100}</StyledTableCell >\r\n                                        <StyledTableCell align=\"right\">{props.bg.dist / props.data[0.1]}</StyledTableCell >\r\n                                        <StyledTableCell align=\"right\">{props.bg['effort point'] / props.data[0.1]}</StyledTableCell >\r\n                                    </StyledTableRow >\r\n                                    <StyledTableRow  >\r\n                                        <StyledTableCell align=\"right\">25%</StyledTableCell >\r\n                                        <StyledTableCell align=\"right\">{Math.round(props.data[0.25] * 60 * 100) / 100}</StyledTableCell >\r\n                                        <StyledTableCell align=\"right\">{props.bg.dist / props.data[0.25]}</StyledTableCell >\r\n                                        <StyledTableCell align=\"right\">{props.bg['effort point'] / props.data[0.25]}</StyledTableCell >\r\n                                    </StyledTableRow >\r\n                                    <StyledTableRow  >\r\n                                        <StyledTableCell align=\"right\">50%</StyledTableCell >\r\n                                        <StyledTableCell align=\"right\">{Math.round(props.data[0.5] * 60 * 100) / 100}</StyledTableCell >\r\n                                        <StyledTableCell align=\"right\">{props.bg.dist / props.data[0.5]}</StyledTableCell >\r\n                                        <StyledTableCell align=\"right\">{props.bg['effort point'] / props.data[0.5]}</StyledTableCell >\r\n                                    </StyledTableRow >\r\n                                    <StyledTableRow  >\r\n                                        <StyledTableCell align=\"right\">75%</StyledTableCell >\r\n                                        <StyledTableCell align=\"right\">{Math.round(props.data[0.75] * 60 * 100) / 100}</StyledTableCell >\r\n                                        <StyledTableCell align=\"right\">{props.bg.dist / props.data[0.75]}</StyledTableCell >\r\n                                        <StyledTableCell align=\"right\">{props.bg['effort point'] / props.data[0.75]}</StyledTableCell >\r\n                                    </StyledTableRow >\r\n                                    <StyledTableRow  >\r\n                                        <StyledTableCell align=\"right\">90%</StyledTableCell >\r\n                                        <StyledTableCell align=\"right\">{Math.round(props.data[0.9] * 60 * 100) / 100}</StyledTableCell >\r\n                                        <StyledTableCell align=\"right\">{props.bg.dist / props.data[0.9]}</StyledTableCell >\r\n                                        <StyledTableCell align=\"right\">{props.bg['effort point'] / props.data[0.9]}</StyledTableCell >\r\n                                    </StyledTableRow >\r\n                                    <StyledTableRow  >\r\n                                        <StyledTableCell align=\"right\">99%</StyledTableCell >\r\n                                        <StyledTableCell align=\"right\">{Math.round(props.data[0.99] * 60 * 100) / 100}</StyledTableCell >\r\n                                        <StyledTableCell align=\"right\">{props.bg.dist / props.data[0.99]}</StyledTableCell >\r\n                                        <StyledTableCell align=\"right\">{props.bg['effort point'] / props.data[0.99]}</StyledTableCell >\r\n                                    </StyledTableRow >\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>}\r\n                        </div>\r\n                        <BarChart\r\n                    dist={props.dist}\r\n                    unit={props.index === 'Overall' ? 'Hr' : 'Min'}\r\n                    title={t('stat.Time Distribution')}\r\n                />\r\n             \r\n        </React.Fragment>\r\n\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { useTranslation } from 'react-i18next';\r\nimport LargeTextPaperSkeleton from \"../Component/LargeTextPaperSkeleton\"\r\n\r\nimport axios from 'axios'\r\nimport StatWrapper from '../Component/StatWrapper'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        maxWidth: \"1600px\",\r\n        margin: '0 auto',\r\n        padding: 10,\r\n        [theme.breakpoints.up('md')]: {\r\n            padding: '20px'\r\n        },\r\n    },\r\n    tab: {\r\n        minWidth: 100\r\n    },\r\n    contentWrapper: {\r\n        maxWidth: 1000,\r\n        margin: '0 auto',\r\n        padding: '10px',\r\n        [theme.breakpoints.up('sm')]: {\r\n            padding: '50px',\r\n        },\r\n        textAlign: 'center'\r\n    },\r\n    wrapper: {\r\n        maxWidth: 1000,\r\n        margin: '0 auto',\r\n        padding: '5px',\r\n        [theme.breakpoints.up('sm')]: {\r\n            padding: '10px',\r\n        },\r\n        [theme.breakpoints.up('md')]: {\r\n            padding: '20px',\r\n        },\r\n    },\r\n    firstPaper: {\r\n        marginBottom: 15\r\n    }\r\n}));\r\n\r\nfunction HK100() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [value, setValue] = useState(0);\r\n    const [dist, setDist] = useState();\r\n    const [stat, setStat] = useState();\r\n    const [bg, setBg] = useState();\r\n\r\n    const { t } = useTranslation();\r\n\r\n\r\n    useEffect(() => {\r\n        axios.get('https://api.npoint.io/133efc2d2a769c930619')\r\n            .then(function (response) {\r\n                // handle success\r\n                setStat(response.data)\r\n            })\r\n        axios.get('https://api.npoint.io/36ed2cb6de546b8660f3')\r\n            .then(function (response) {\r\n                // handle success\r\n                setDist(response.data)\r\n            })\r\n        axios.get('https://api.npoint.io/aaa03b744297ade7313d')\r\n            .then(function (response) {\r\n                // handle success\r\n                setBg(response.data)\r\n            })\r\n    }, []);\r\n\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const handleChangeIndex = (index) => {\r\n        setValue(index);\r\n    };\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <Toolbar />\r\n            <div className={classes.root}>\r\n                <Paper elevation={1} className={classes.firstPaper}>\r\n                    <div className={classes.contentWrapper}>\r\n                        <Typography variant=\"h3\" gutterBottom>\r\n                            {t('stat.title')}\r\n                        </Typography>\r\n\r\n\r\n                    </div>\r\n                </Paper>\r\n                <Paper elevation={3} >\r\n                    <Tabs\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                        indicatorColor=\"primary\"\r\n                        textColor=\"primary\"\r\n                        variant=\"scrollable\"\r\n                        scrollButtons=\"auto\"\r\n                        aria-label=\"full width tabs example\"\r\n                    >\r\n                        <Tab className={classes.tab} label=\"Overall\" />\r\n                        {stat && stat.map((item, index) => {\r\n                            if (index !== stat.length - 1)\r\n                                return (\r\n                                    <Tab key={index} className={classes.tab} label={`CP ${index + 1}`} />\r\n                                )\r\n                        })}\r\n                    </Tabs>\r\n                    {(bg && dist && stat) ? <SwipeableViews\r\n                        enableMouseEvents={true}\r\n                        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n                        index={value}\r\n                        onChangeIndex={handleChangeIndex}\r\n                    >\r\n                        {\r\n                            stat.map((item, index) => {\r\n                                if (index ===0)\r\n                                   return <div key={index} className={classes.wrapper}>\r\n                                        <StatWrapper\r\n                                            data={stat[stat.length - 1]}\r\n                                            bg={bg[stat.length - 1]}\r\n                                            dist={dist[stat.length - 1]}\r\n                                            index={'Overall'}\r\n                                        />\r\n                                    </div>\r\n                                else\r\n                                    return <div key={index} className={classes.wrapper}>\r\n                                        <StatWrapper\r\n                                            data={item}\r\n                                            bg={bg[index]}\r\n                                            dist={dist[index]}\r\n                                            index={index}\r\n                                        />\r\n                                    </div>\r\n                            })\r\n                        }\r\n\r\n                    </SwipeableViews > :\r\n                        <LargeTextPaperSkeleton />\r\n                    }\r\n\r\n                </Paper>\r\n            </div>\r\n\r\n        </React.Fragment >\r\n\r\n    )\r\n}\r\nexport default HK100;\r\n","import React from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    responsive: {\r\n        width: '100%',\r\n        height: 'auto'\r\n    }\r\n}));\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    },\r\n\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n    const { children, classes, onClose, ...other } = props;\r\n    return (\r\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n            <Typography variant=\"h6\">{children}</Typography>\r\n            {onClose ? (\r\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ) : null}\r\n        </MuiDialogTitle>\r\n    );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n    root: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(1),\r\n    },\r\n}))(MuiDialogActions);\r\n\r\nexport default function Modal(props) {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n  \r\n    let { open, handleClose } = props\r\n\r\n    return (\r\n        <div>\r\n            <Dialog fullScreen={fullScreen}  onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open} maxWidth='md'>\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n                    How To Use The Table\r\n        </DialogTitle>\r\n                <DialogContent dividers>\r\n                    <Typography gutterBottom>\r\n                        The Table shows the accuracy of the prediction method. It shows the proportion of runner's predicted finshing time and actual finishing time located within the certain intervals.\r\n                        The finishing time predication is done by using runner's data from the Starting Point to the Certain Check Point.\r\n          </Typography>\r\n                    <Typography gutterBottom>\r\n                        The header respresents differnt Check Points in the race.  The left column represents the time difference between the predicted time and the actual time for a runner.\r\n          </Typography>\r\n                    <img src=\"https://i.imgur.com/1ayo7cR.jpg\" alt=\"tableexample\" className={classes.responsive} />\r\n                    <Typography gutterBottom>\r\n                        For example, the red square in the iamge below represents that by using the time of those runners consumed from Starting Point to Check Point 4 for predication,\r\n                        84% of runner's finishing time located within 2.5 hours of the predicated time.\r\n          </Typography>\r\n\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button autoFocus onClick={handleClose} color=\"primary\">\r\n                        Close\r\n          </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\r\nimport Button from '@material-ui/core/Button';\r\nimport Modal from \"../Component/Modal\"\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: theme.palette.common.black,\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\nconst StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.action.hover,\r\n        },\r\n    },\r\n}))(TableRow);\r\nexport default function CustomTable(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    return (\r\n        <TableContainer>\r\n            <Typography variant=\"h3\" gutterBottom>\r\n                {props.title}\r\n            </Typography>\r\n            <Button onClick={handleClickOpen}\r\n                startIcon={<HelpOutlineIcon />}\r\n            >\r\n                Help\r\n            </Button>\r\n            <Modal\r\n                open={open}\r\n                handleClose={handleClose}\r\n            />\r\n            <Table aria-label=\"simple table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <StyledTableCell align=\"right\">Probi of Predicted Time and Actual Time within: </StyledTableCell >\r\n                        {props.data && Object.keys(props.data[1]).map((i, index) => {\r\n                            return <StyledTableCell key={index} align=\"right\">{i}</StyledTableCell >\r\n                        })}\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {props.data && props.data.map((item, index) => {\r\n                        return <StyledTableRow key={index}  >\r\n                            <StyledTableCell align=\"center\">{index / 2 + 0.5}Hr</StyledTableCell >\r\n                            {Object.values(item).map((i, index2) => {\r\n                                return <StyledTableCell key={index2} align=\"right\">{Math.round(i * 10000) / 10000}</StyledTableCell >\r\n                            })}\r\n                        </StyledTableRow >\r\n                    })}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n}","import React from 'react';\r\nimport { Scatter } from 'react-chartjs-2';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\n\r\nexport default function ScatterChart(props) {\r\n    const data = props.data1 && props.data2 && {\r\n        labels: \"tt\",\r\n        datasets: [\r\n            {\r\n                label: 'Number of Runner',\r\n                backgroundColor: 'rgba(54,162,235,0.8)',\r\n                borderColor: 'rgba(54,162,235,1)',\r\n                borderWidth: 1,\r\n                hoverBackgroundColor: 'rgba(54,162,235,1)',\r\n                hoverBorderColor: 'rgba(54,162,235,1)',\r\n                data: props.data1 && props.data1.map((item, index) => {\r\n                    return ({\r\n                        x: item,\r\n                        y: props.data2 && props.data2[index]\r\n                    })\r\n                })\r\n            }\r\n        ]\r\n    };\r\n    return (\r\n        <div>\r\n            {props.data1 && props.data2 && \r\n            <React.Fragment>\r\n\r\n            <Typography variant=\"h5\" gutterBottom>\r\n                {props.title && props.title}\r\n                        </Typography>\r\n                <Scatter\r\n                    data={data}\r\n                    width={100}\r\n                    height={50}\r\n                    options={{\r\n                        responsive: true,\r\n                        scales: {\r\n                            xAxes: [{\r\n                                display: true,\r\n                                scaleLabel: {\r\n                                    display: true,\r\n                                    labelString: `Predicted Time (in ${props.unit})`\r\n                                },\r\n                            }],\r\n                            yAxes: [{\r\n                                display: true,\r\n                                scaleLabel: {\r\n                                    display: true,\r\n                                    labelString:`Actual Time (in ${props.unit})`\r\n                                }\r\n                            }]\r\n                        }\r\n                    }}\r\n                />\r\n            </React.Fragment>\r\n                }\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        paddingBottom: '50px'\r\n    },\r\n    title: {\r\n        marginBottom: '50px'\r\n    },\r\n    subtitle: {\r\n        marginBottom: '25px'\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    },\r\n    textBottomMargin: {\r\n        marginBottom: '35px'\r\n\r\n    }\r\n\r\n}));\r\nexport default function PredictTextField(props) {\r\n    const classes = useStyles();\r\n    const { t, i18n } = useTranslation();\r\n\r\n    let { title, subtitle, content, children, assumptionTitle, assumptionContent,methodName } = props\r\n    if(methodName)\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n            {title && <Typography className={classes.title} variant=\"h3\" className={classes.textBottomMargin}>\r\n                {t(`predict.modeldesc.${methodName}.${title}`)}\r\n            </Typography>}\r\n            {subtitle && <Typography className={classes.subtitle} variant=\"h5\" className={classes.textBottomMargin} >\r\n                {t(`predict.modeldesc.${methodName}.${subtitle}`)}\r\n            </Typography>}\r\n            {content && content.map((item, index) => {\r\n                if (Array.isArray(item)) {\r\n                    return item.map((item2, index2) => {\r\n                        return <Typography key={index2} variant=\"body1\" className={item.length - 1 === index2 ? classes.textBottomMargin : ''} >\r\n                            {t(`predict.modeldesc.${methodName}.${item2}`)}\r\n                        </Typography>\r\n                    })\r\n                }\r\n                return <Typography key={index} variant=\"body1\" className={classes.textBottomMargin} >\r\n                    {t(`predict.modeldesc.${methodName}.${item}`)}\r\n                </Typography>\r\n            })}\r\n            {assumptionTitle && <Typography className={classes.subtitle} variant=\"h5\" className={classes.textBottomMargin} >\r\n                {t(`predict.modeldesc.${methodName}.${assumptionTitle}`)}\r\n            </Typography>}\r\n            {assumptionContent && assumptionContent.map((item, index) => {\r\n                if (Array.isArray(item)) {\r\n                    return item.map((item2, index2) => {\r\n                        return <Typography key={index2} variant=\"body1\" className={item.length - 1 === index2 ? classes.textBottomMargin : ''}>\r\n                            {t(`predict.modeldesc.${methodName}.${item2}`)}\r\n                        </Typography>\r\n                    })\r\n                }\r\n                return <Typography key={index} variant=\"body1\" >\r\n                    {t(`predict.modeldesc.${methodName}.${item}`)}\r\n                </Typography>\r\n            })}\r\n            <React.Fragment>\r\n                {children}\r\n            </React.Fragment>\r\n\r\n        </div>\r\n    );\r\n}","import React, { useEffect, useState } from 'react';\r\n\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport CustomTable from '../Component/CustomTable'\r\nimport ScatterChart from '../Component/ScatterChart'\r\nimport axios from 'axios'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { useTranslation } from 'react-i18next';\r\n// import Skeleton from '@material-ui/lab/Skeleton';\r\nimport PredictTextField from \"../Component/PredictTextField\"\r\nimport LargeTextPaperSkeleton from \"../Component/LargeTextPaperSkeleton\"\r\n\r\nimport StatWrapper from '../Component/StatWrapper'\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `full-width-tab-${index}`,\r\n        'aria-controls': `full-width-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        maxWidth: \"1600px\",\r\n        margin: '0 auto',\r\n        padding: '10px',\r\n        [theme.breakpoints.up('md')]: {\r\n            padding: '20px',\r\n        },\r\n    },\r\n    tab: {\r\n        minWidth: 150\r\n    },\r\n    contentWrapper: {\r\n        maxWidth: 1000,\r\n        margin: '0 auto',\r\n        padding: '10px',\r\n        [theme.breakpoints.up('sm')]: {\r\n            padding: '50px',\r\n        },\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    },\r\n    firstPaper: {\r\n        marginBottom: 15\r\n    }\r\n}));\r\n\r\nfunction HK100() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [value, setValue] = useState(0);\r\n    const [intro, setIntro] = useState();\r\n    const [findings, setFindings] = useState()\r\n    const [methodResultData, setMethodResultData] = useState()\r\n    const [methodRawResultData, setMethodRawResultData] = useState()\r\n\r\n\r\n    const { t } = useTranslation();\r\n\r\n    useEffect(() => {\r\n        axios.get('https://api.npoint.io/302fdd3ac3998e83dd4f')\r\n            .then(function (response) {\r\n                // handle success\r\n                setMethodResultData(response.data)\r\n            })\r\n        axios.get('https://api.npoint.io/bcd17e9d6d69d7e41c7b')\r\n            .then(function (response) {\r\n                // handle success\r\n                setMethodRawResultData(response.data)\r\n            })\r\n        axios.get('https://api.npoint.io/4caa836668ca5a1f673e')\r\n            .then(function (response) {\r\n                // handle success\r\n                setIntro(response.data)\r\n            })\r\n        axios.get('https://api.npoint.io/5ea7c0b66302d24c48ea')\r\n            .then(function (response) {\r\n                // handle success\r\n                setFindings(response.data)\r\n            })\r\n\r\n\r\n    }, []);\r\n\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const handleChangeIndex = (index) => {\r\n        setValue(index);\r\n    };\r\n\r\n    const title = ['Past Data', 'Chung', 'ChungPlus']\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <Toolbar />\r\n            <div className={classes.root}>\r\n\r\n                <Paper elevation={1} className={classes.firstPaper}>\r\n                    <div className={classes.contentWrapper}>\r\n                        <Typography variant=\"h3\" gutterBottom align='center'>\r\n                            {t('predict.title')}\r\n                        </Typography>\r\n                        <Typography variant=\"h5\" gutterBottom align='center'>\r\n                            {t('predict.subtitle')}\r\n\r\n                        </Typography>\r\n\r\n                    </div>\r\n                </Paper>\r\n                <Paper elevation={3}  >\r\n\r\n                    <Tabs\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                        indicatorColor=\"primary\"\r\n                        textColor=\"primary\"\r\n                        variant=\"scrollable\"\r\n                        scrollButtons=\"auto\"\r\n                    >\r\n                        <Tab className={classes.tab} label=\"Past Data\" />\r\n                        <Tab className={classes.tab} label=\"Chung\" />\r\n                        <Tab className={classes.tab} label=\"Chung Plus\" />\r\n                    </Tabs>\r\n                    {(methodResultData && intro && findings && methodRawResultData) ?\r\n\r\n                        <SwipeableViews\r\n                            enableMouseEvents={true}\r\n                            axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n                            index={value}\r\n                            onChangeIndex={handleChangeIndex}\r\n                            // animateHeight={passData && chung && chungPlus && intro && findings && combineRawData[2] !== undefined\r\n                            animateHeight={true}\r\n                        >\r\n                            {methodResultData.map((item, index) => {\r\n                                return (\r\n                                    <div key={index}>\r\n                                        <div className={`${classes.contentWrapper}`}>\r\n                                            {intro && <PredictTextField\r\n                                                title={`${title[index]} 預測模型簡介`}\r\n                                                subtitle={intro[index].subtitle}\r\n                                                //array of string\r\n                                                content={intro[index].content}\r\n                                                assumptionTitle={intro[index].assumptionTitle}\r\n                                                assumptionContent={intro[index].assumptionContent}\r\n                                                methodName={title[index]}\r\n                                            />}\r\n\r\n                                            {findings && <PredictTextField\r\n                                                methodName={title[index]}\r\n                                                title={`${title[index]} 發現/結果摘要`}\r\n                                                content={findings[index].content}\r\n                                            />}\r\n                                            <CustomTable\r\n                                                title={title[index]}\r\n                                                data={item}\r\n                                            />\r\n                                        </div>\r\n                                        <Grid container>\r\n                                            {methodRawResultData[index] &&\r\n                                                Object.keys(methodRawResultData[index]).map((item, index2) => {\r\n                                                    if (item !== 'adjtotaltime')\r\n                                                        return (\r\n                                                            <Grid item xs={12} md={6} xl={4} key={index2} style={{ padding: '20px' }}>\r\n                                                                <ScatterChart\r\n                                                                    data1={methodRawResultData[index][item]}\r\n                                                                    data2={methodRawResultData[index].adjtotaltime}\r\n                                                                    unit={'Hr'}\r\n                                                                    title={`${t('predict.Actual Time against Predicted Time')} (CP${index2 + 2} - Finish)`}\r\n                                                                />\r\n\r\n                                                            </Grid>\r\n                                                        )\r\n                                                })\r\n                                            }\r\n                                        </Grid>\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </SwipeableViews>\r\n                        : <LargeTextPaperSkeleton />\r\n                    }\r\n                </Paper>\r\n            </div>\r\n        </React.Fragment>\r\n\r\n    )\r\n}\r\nexport default HK100;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport { withStyles, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Typography from '@material-ui/core/Typography';\r\nconst useStyles = makeStyles((theme) => ({\r\n \r\n}));\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: theme.palette.common.black,\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n\r\n}))(TableCell);\r\nconst StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.action.hover,\r\n        },\r\n    },\r\n}))(TableRow);\r\nfunction GeneralTable(props) {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    let { title, header,content } = props\r\n    return (\r\n        <div>\r\n            <TableContainer>\r\n                <Typography variant=\"h4\" gutterBottom>\r\n                    {title && title}\r\n                </Typography>\r\n                <Table aria-label=\"simple table\" size={props.size}>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            {header && header.map((item, index) => {\r\n                                return <StyledTableCell style={{width: props.width}} key={index} align={props.align ? props.align : 'right'}>{item}</StyledTableCell >\r\n                            })}\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {content && content.map((item, index) => {\r\n                            return <StyledTableRow key={index}  >\r\n                                {item &&  item.map((item2, index2) => {\r\n                                    return <StyledTableCell  key={index2} align={props.align ? props.align : 'right'}>{item2}</StyledTableCell >\r\n                                })}\r\n                            </StyledTableRow >\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default GeneralTable;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport PropTypes from 'prop-types';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport { withStyles, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport GeneralTable from \"./GeneralTable\"\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n}));\r\n\r\nfunction AnalyzeRunnerResult(props) {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    let { runner, bg } = props\r\n    const { t } = useTranslation();\r\n\r\n    let formatData = (data) => {\r\n        return data.map((item, index) => {\r\n            return [index + 1 === runner.length ? 'Finish' : `CP${index + 1}`, item.toFixed(2), bg[index].dist.toFixed(2), (bg[index].dist / item).toFixed(2), (bg[index]['effort point'] / item).toFixed(2)]\r\n        })\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div >\r\n                <GeneralTable\r\n                    title={t('checkranking.summary')}\r\n                    header={['Check Point', ' Time (Hr)', 'Distance (km)', 'Avg. Speed (km/h)', 'Avg. ADJ Speed (km/h)']}\r\n                    content={bg && runner && formatData(runner)}\r\n                />\r\n            </div>\r\n        </React.Fragment>\r\n\r\n    )\r\n}\r\nexport default AnalyzeRunnerResult;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport BarChart from \"./BarChart\"\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        width: '100%',\r\n        padding: '5px',\r\n        [theme.breakpoints.up('sm')]: {\r\n            padding: '10px',\r\n          },\r\n          [theme.breakpoints.up('md')]: {\r\n            padding: '20px',\r\n          },\r\n    },\r\n    paperWarpper: {\r\n        marginTop: '10px',\r\n        [theme.breakpoints.up('sm')]: {\r\n            margin: '10px',\r\n          },\r\n          [theme.breakpoints.up('md')]: {\r\n            margin: '20px',\r\n          },\r\n    },\r\n    textBottomMargin: {\r\n        marginBottom: '35px'\r\n    },\r\n    doubleColumnWrapper: {\r\n        maxWidth: '1600px',\r\n        margin: '0 auto'\r\n    }\r\n}));\r\nfunction CompareRunnerResult(props) {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    let { runner, dist, percentile, bg } = props\r\n    const { t } = useTranslation();\r\n\r\n    let percentileMark = [0.01, 0.02, 0.03, 0.04, 0.05, 0.06, 0.07, 0.08, 0.09, 0.1, 0.11, 0.12, 0.13, 0.14, 0.15, 0.16, 0.17, 0.18, 0.19, 0.2, 0.21, 0.22, 0.23, 0.24, 0.25, 0.26, 0.27, 0.28, 0.29, 0.3, 0.31, 0.32, 0.33, 0.34, 0.35, 0.36, 0.37, 0.38, 0.39, 0.4, 0.41, 0.42, 0.43, 0.44, 0.45, 0.46, 0.47, 0.48, 0.49, 0.5, 0.51, 0.52, 0.53, 0.54, 0.55, 0.56, 0.57, 0.58, 0.59, 0.6, 0.61, 0.62, 0.63, 0.64, 0.65, 0.66, 0.67, 0.68, 0.69, 0.7, 0.71, 0.72, 0.73, 0.74, 0.75, 0.76, 0.77, 0.78, 0.79, 0.8, 0.81, 0.82, 0.83, 0.84, 0.85, 0.86, 0.87, 0.88, 0.89, 0.9, 0.91, 0.92, 0.93, 0.94, 0.95, 0.96, 0.97, 0.98, 0.99\r\n    ]\r\n\r\n    let ranking = (time, index) => {\r\n        let keys = Object.keys(percentile);\r\n        let position;\r\n\r\n        for (let i = 0; i < percentile[keys[index]].length; i++) {\r\n            if (time < percentile[keys[index]][i]) {\r\n                return percentileMark[i]\r\n            }\r\n        }\r\n        return percentileMark[percentileMark.length - 1]\r\n    }\r\n    return (\r\n        <div>\r\n            <div >\r\n                <Paper elevation={1} className={classes.paper}>\r\n                    <Typography align='center' variant=\"h4\" className={classes.textBottomMargin}>\r\n                        {t('checkranking.compare')}\r\n                    </Typography>\r\n                </Paper>\r\n            </div>\r\n            <Grid container className={classes.doubleColumnWrapper} alignItems='center'>\r\n\r\n\r\n\r\n\r\n                {runner && percentile && dist  && runner.map((item, index) => {\r\n                    return <Grid item xs={12} sm={6} key={index}>\r\n                        <div className={classes.paperWarpper}>\r\n\r\n                            <Paper elevation={1} className={classes.paper}>\r\n                                <Typography variant=\"h4\" className={classes.textBottomMargin}>\r\n\r\n\r\n                                    {index === runner.length - 1 ? \"Overall Result\" : `From ${index === 0 ? \"Starting Point\" : 'CP' + (index)} To ${index === runner.length - 2 ? 'Finish Line' : 'CP' + (index + 1)}`}\r\n                                </Typography>\r\n                                <div> </div>\r\n                                <BarChart\r\n                                    dist={dist[index]}\r\n                                    unit={index === runner.length - 1 ? 'Hr' : 'Min'}\r\n                                    position={item}\r\n                                    title={\r\n                                        `Perentile:  ${Math.round(ranking(item, index) * 100)}th`\r\n                                    }\r\n                                />\r\n                            </Paper>\r\n                        </div>\r\n                    </Grid>\r\n                })}\r\n\r\n            </Grid>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default CompareRunnerResult;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\n\r\nimport GeneralTable from \"./GeneralTable\"\r\nconst useStyles = makeStyles((theme) => ({\r\n    tableWrapper: {\r\n        paddingBottom: '50px'\r\n    },\r\n}));\r\nfunction ComparePredictMethod(props) {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    let { runner, bg } = props\r\n    let [pastDataVar, setPastDataVar] = useState()\r\n    let [chungVar, setChungVar] = useState()\r\n    let [chungPlusVar, setChungPlusVar] = useState()\r\n    const { t } = useTranslation();\r\n\r\n\r\n    let runnerDataToAccMode = (runnerData) => {\r\n\r\n        for (let i = 0; i < runnerData.length; i++) {\r\n            if (i < runnerData.length - 3)\r\n                runnerData[i + 1] = runnerData[i] + runnerData[i + 1]\r\n            else\r\n                runnerData.pop()\r\n        }\r\n        runnerData.shift()\r\n        return runnerData\r\n    }\r\n    let formatTableConent = (runnerData, predicatedTime, data) => {\r\n\r\n        let ouputData = runnerData.map((item, index) => {\r\n            return [`CP${index + 2}`, Math.round(item * 100) / 100, Math.round(predicatedTime[index] * 100) / 100, Math.round(data[data.length - 1] * 100) / 100, Math.round((predicatedTime[index] - data[data.length - 1]) * 100) / 100\r\n                , `${Math.round((predicatedTime[index] - data[data.length - 1]) / data[data.length - 1] * 100 * 100) / 100}%`]\r\n        })\r\n        return ouputData\r\n    }\r\n\r\n    let AccumEPDistance = () => {\r\n        if (bg) {\r\n            let EPDistance = []\r\n            for (let i = 0; i < bg.length; i++) {\r\n                if (i === 0)\r\n                    EPDistance[i] = bg[i]['effort point'] + bg[i + 1]['effort point']\r\n                else if (i < bg.length - 3)\r\n                    EPDistance[i] = EPDistance[i - 1] + bg[i + 1]['effort point']\r\n            }\r\n            return EPDistance\r\n        }\r\n    }\r\n    let tmpPastDataPredictMethod = (data) => {\r\n        let runnerData = runnerDataToAccMode([...data])\r\n        let equtaion = [{ slope: 6.6728, y: 1.9216 }, { slope: 4.1018, y: 0.6741 }, { slope: 3.2376, y: 0.1649 }, { slope: 2.5969, y: 0.3272 }, { slope: 2.2188, y: 0.0487 }, { slope: 1.5941, y: 0.6583 }, { slope: 1.3408, y: 1.1222 }, { slope: 1.1987, y: 1.2229 }, { slope: 1.0838, y: 0.7521 }]\r\n        let predicatedTime = runnerData.map((item, index) => {\r\n            return item * equtaion[index].slope + equtaion[index].y\r\n        })\r\n        let tmp = (predicatedTime.reduce((accumulator, currentValue) => Math.abs(accumulator) + Math.abs(currentValue)) - (predicatedTime.length * data[data.length - 1])) / (predicatedTime.length * data[data.length - 1])\r\n        tmp = (tmp * 100).toFixed(2)\r\n        pastDataVar !== tmp && setPastDataVar(tmp)\r\n        return formatTableConent(runnerData, predicatedTime, data)\r\n    }\r\n    let tmpChungPredictMethod = (data) => {\r\n        let runnerData = runnerDataToAccMode([...data])\r\n        let EPDistance = AccumEPDistance()\r\n        let predicatedTime = runnerData.map((item, index) => {\r\n            return item * bg[bg.length - 1]['effort point'] / EPDistance[index]\r\n        })\r\n        let tmp = (predicatedTime.reduce((accumulator, currentValue) => Math.abs(accumulator) + Math.abs(currentValue)) - (predicatedTime.length * data[data.length - 1])) / (predicatedTime.length * data[data.length - 1])\r\n        tmp = (tmp * 100).toFixed(2)\r\n        chungVar !== tmp && setChungVar(tmp)\r\n        return formatTableConent(runnerData, predicatedTime, data)\r\n    }\r\n    let tmpChungPlusPredictMethod = (data) => {\r\n        let runnerData = runnerDataToAccMode([...data])\r\n        let EPDistance = AccumEPDistance()\r\n        let predicatedTime = runnerData.map((item, index) => {\r\n            return item * Math.pow((bg[bg.length - 1]['effort point'] / EPDistance[index]), 1.06)\r\n        })\r\n        let tmp = (predicatedTime.reduce((accumulator, currentValue) => Math.abs(accumulator) + Math.abs(currentValue)) - (predicatedTime.length * data[data.length - 1])) / (predicatedTime.length * data[data.length - 1])\r\n        tmp = (tmp * 100).toFixed(2)\r\n        chungPlusVar !== tmp && setChungPlusVar(tmp)\r\n        return formatTableConent(runnerData, predicatedTime, data)\r\n    }\r\n\r\n    let findsmallest = () => {\r\n        if (Math.abs(pastDataVar) <= Math.abs(chungVar) && Math.abs(pastDataVar) <= Math.abs(chungPlusVar))\r\n            return 'Pass Data'\r\n        else if (Math.abs(chungVar) <= Math.abs(pastDataVar) && Math.abs(chungVar) <= Math.abs(chungPlusVar))\r\n            return \"Chung\"\r\n        else\r\n            return \"ChungPlus\"\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Typography variant=\"h5\" className={classes.tableWrapper}>\r\n                    {t('checkranking.modelintro')}\r\n                <Link style={{ textDecoration: 'none' }} target=\"_blank\" to={`${process.env.PUBLIC_URL}/hk100predict`} >{t('checkranking.modelintro2')} </Link>\r\n                </Typography>\r\n                <Typography variant=\"h5\" >\r\n                    摘要\r\n                </Typography>\r\n                <Typography variant=\"body1\" >\r\n                    Past Data {t('checkranking.avgerror')}: {pastDataVar}%\r\n                </Typography>\r\n                <Typography variant=\"body1\" >\r\n                    Chung {t('checkranking.avgerror')}:  {chungVar}%\r\n                </Typography>\r\n                <Typography variant=\"body1\" className={classes.tableWrapper}>\r\n                    ChungPlus {t('checkranking.avgerror')}:  {chungPlusVar}%\r\n                </Typography>\r\n                <Typography variant=\"h6\" className={classes.tableWrapper}>\r\n                {t('checkranking.ofyou')}  {findsmallest()}  {t('checkranking.best')}\r\n                </Typography>\r\n            </div>\r\n            <div className={classes.tableWrapper}>\r\n                <GeneralTable\r\n                    title={'Past Data Method'}\r\n                    header={['Check Point', ' Accumulated time (Hr)', 'Predicted Finishing Time (Hours)', 'Actual Finishing Time (Hours)', 'Difference (Hours)', 'Percentage Error']}\r\n                    content={runner && tmpPastDataPredictMethod(runner)}\r\n                />\r\n            </div>\r\n            <div className={classes.tableWrapper}>\r\n                <GeneralTable\r\n                    title={'Chung Method'}\r\n                    header={['Check Point', ' Accumulated time (Hr)', 'Predicted Finishing Time (Hours)', 'Actual Finishing Time (Hours)', 'Difference (Hours)', 'Percentage Error']}\r\n                    content={runner && bg && tmpChungPredictMethod(runner)}\r\n                />\r\n            </div>\r\n            <div className={classes.tableWrapper}>\r\n                <GeneralTable\r\n                    title={'ChungPlus Method'}\r\n                    header={['Check Point', ' Accumulated time (Hr)', 'Predicted Finishing Time (Hours)', 'Actual Finishing Time (Hours)', 'Difference (Hours)', 'Percentage Error']}\r\n                    content={runner && tmpChungPlusPredictMethod(runner)}\r\n                />\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default ComparePredictMethod;\r\n","import React, { useState } from 'react';\r\n\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport axios from 'axios'\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport AnalyzeRunnerResult from \"../Component/AnalyzeRunnerResult\"\r\nimport CompareRunnerResult from \"../Component/CompareRunnerResult\"\r\nimport ComparePredictMethod from \"../Component/ComparePredictMethod\"\r\nimport { useTranslation } from 'react-i18next';\r\nimport LargeTextPaperSkeleton from \"../Component/LargeTextPaperSkeleton\"\r\n\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        maxWidth: \"1600px\",\r\n        margin: '0 auto',\r\n        padding: 10,\r\n        [theme.breakpoints.up('md')]: {\r\n            padding: '20px'\r\n        },\r\n    },\r\n    paper: {\r\n        padding: '30px 0 ',\r\n        marginBottom: '25px'\r\n    },\r\n    resultWrapper: {\r\n        maxWidth: 1000,\r\n        width: '90%',\r\n        margin: '0 auto',\r\n        padding: '50px 0'\r\n    },\r\n    formgroup: {\r\n        width: 330,\r\n        margin: '0 auto',\r\n        '& .MuiFormGroup-root': {\r\n            marginBottom: '15px',\r\n        },\r\n        '& .MuiTextField-root': {\r\n            marginBottom: '15px',\r\n            width: '100%',\r\n        },\r\n    },\r\n    tab: {\r\n        minWidth: 100\r\n    },\r\n    contentWrapper: {\r\n        maxWidth: 1000,\r\n        margin: '0 auto',\r\n        padding: '25px 25px',\r\n        textAlign: 'center'\r\n    },\r\n}));\r\n\r\nfunction HK100CheckRanking() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [result, setResult] = useState();\r\n    const [dist, setDist] = useState();\r\n    const [percentile, setPercentile] = useState();\r\n\r\n    const [value, setValue] = useState(0);\r\n    const { t, i18n } = useTranslation();\r\n\r\n\r\n    const [bib, setBib] = useState();\r\n    const [bg, setBg] = useState();\r\n    const [fetching, setFetching] = useState(false);\r\n\r\n    // const [name, setName] = useState();\r\n\r\n\r\n    let handleButtonClick = () => {\r\n        if (bib) {\r\n            setFetching(true)\r\n            setResult(false)\r\n            axios.get('https://api.npoint.io/c885ad4ae2e215574b6a/' + bib)\r\n                .then(function (response) {\r\n                    // handle success\r\n                    setResult(response.data)\r\n                    if (!percentile)\r\n                        axios.get('https://api.npoint.io/204b371874a961b52209')\r\n                            .then(function (response) {\r\n                                // handle success\r\n                                setPercentile(response.data)\r\n                            })\r\n                    if (!bg)\r\n                        axios.get('https://api.npoint.io/aaa03b744297ade7313d')\r\n                            .then(function (response) {\r\n                                // handle success\r\n                                setBg(response.data)\r\n                            })\r\n                    if (!dist)\r\n                        axios.get('https://api.npoint.io/36ed2cb6de546b8660f3')\r\n                            .then(function (response) {\r\n                                // handle success\r\n                                setDist(response.data)\r\n                            })\r\n                    setFetching(false)\r\n                }).catch((error) => {\r\n                    console.log(error)\r\n                    alert('404')\r\n                    setFetching(false)\r\n\r\n                })\r\n        } else {\r\n            alert('enter')\r\n        }\r\n\r\n    }\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const handleChangeIndex = (index) => {\r\n        setValue(index);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <Toolbar />\r\n            <div className={classes.root}>\r\n                <Paper elevation={1} className={classes.paper}>\r\n                    <div className={classes.contentWrapper}>\r\n                        <Typography variant=\"h3\" gutterBottom>\r\n                            {t(`checkranking.title`)}\r\n                        </Typography>\r\n                        <Typography variant=\"h5\" gutterBottom>\r\n                            {t(`checkranking.subtitle`)}\r\n                        </Typography>\r\n\r\n                    </div>\r\n                </Paper>\r\n                <Paper elevation={1} className={classes.paper}>\r\n                    <div className={classes.formgroup}>\r\n                        <FormLabel component=\"legend\">Year</FormLabel>\r\n                        <RadioGroup defaultValue=\"2020\" aria-label=\"quiz\" name=\"quiz\" >\r\n                            <FormControlLabel disabled value=\"2020\" control={<Radio />} label=\"2020\" />\r\n                        </RadioGroup>\r\n                        <TextField\r\n                            label=\"BIB Number\"\r\n                            variant=\"outlined\"\r\n                            onChange={(e) => setBib(e.target.value)}\r\n                            helperText=\"For example: 3481\"\r\n\r\n                        />\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            size=\"large\"\r\n                            fullWidth\r\n                            endIcon={<SendIcon />}\r\n                            onClick={handleButtonClick}\r\n                        >\r\n                            Analyze My Result\r\n                </Button>\r\n                    </div>\r\n                </Paper>\r\n\r\n                {( dist && bg && result && percentile) ?\r\n                    <React.Fragment>\r\n\r\n                        <Paper elevation={1} className={classes.paper}>\r\n\r\n                            <Tabs\r\n                                value={value}\r\n                                onChange={handleChange}\r\n                                indicatorColor=\"primary\"\r\n                                textColor=\"primary\"\r\n                                centered\r\n                            >\r\n                                <Tab className={classes.tab} label=\"Summary\" />\r\n                                <Tab className={classes.tab} label=\"Compare\" />\r\n                                <Tab className={classes.tab} label=\"Predict Accurcy\" />\r\n                            </Tabs>\r\n                        </Paper>\r\n\r\n                        <SwipeableViews\r\n                            enableMouseEvents={true}\r\n                            axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n                            index={value}\r\n                            onChangeIndex={handleChangeIndex}\r\n                            animateHeight={true}\r\n                        >\r\n                            <Paper elevation={1} >\r\n                                <div className={classes.resultWrapper}>\r\n                                    <AnalyzeRunnerResult\r\n                                        runner={result}\r\n                                        bg={bg}\r\n                                    />\r\n                                </div>\r\n                            </Paper>\r\n                            <CompareRunnerResult\r\n                                percentile={percentile}\r\n                                dist={dist}\r\n                                runner={result}\r\n                                bg={bg}\r\n                            />\r\n                            <Paper elevation={1} >\r\n                                <div className={classes.resultWrapper}>\r\n                                    <ComparePredictMethod\r\n                                        runner={result}\r\n                                        bg={bg}\r\n                                    />\r\n                                </div>\r\n                            </Paper>\r\n\r\n\r\n                        </SwipeableViews>\r\n                    </React.Fragment>\r\n\r\n                    : fetching && <LargeTextPaperSkeleton />\r\n                }\r\n\r\n            </div>\r\n        </React.Fragment>\r\n\r\n    )\r\n}\r\nexport default HK100CheckRanking;\r\n","import React, {  useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport axios from 'axios'\r\nimport Button from '@material-ui/core/Button';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\nimport GeneralTable from \"../Component/GeneralTable\"\r\nimport Paper from '@material-ui/core/Paper';\r\nimport LargeTextPaperSkeleton from \"../Component/LargeTextPaperSkeleton\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root:{\r\n        maxWidth: \"1600px\",\r\n        margin: '0 auto',\r\n        padding: 10,\r\n        [theme.breakpoints.up('md')]: {\r\n            padding: '20px'\r\n          },\r\n    },\r\n    paper: {\r\n        padding: '30px 0 ',\r\n        marginBottom: '25px'\r\n    },\r\n    resultWrapper: {\r\n        maxWidth: 1000,\r\n        width: '90%',\r\n        margin: '0 auto',\r\n        padding: '50px 0'\r\n    },\r\n    formgroup: {\r\n        width: 330,\r\n        margin: '0 auto',\r\n        '& .MuiFormGroup-root': {\r\n            marginBottom: '15px',\r\n        },\r\n        '& .MuiTextField-root': {\r\n            marginBottom: '15px',\r\n            width: '100%',\r\n        },\r\n    },\r\n    tab: {\r\n        minWidth: 100\r\n    },\r\n    contentWrapper: {\r\n        maxWidth: 1000,\r\n        margin: '0 auto',\r\n        padding: '25px 25px',\r\n        textAlign: 'center'\r\n    },\r\n    probiTableWrapper: {\r\n        \r\n        marginTop: '25px',\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: '50%',\r\n          },\r\n    }\r\n}));\r\n\r\nfunction HK1100PredictMyResult() {\r\n    const classes = useStyles();\r\n    const [methodResultData, setMethodResultData] = useState()\r\n\r\n    const [bg, setBg] = useState();\r\n    const [fetching, setFetching] = useState(false);\r\n\r\n    const [finishPoint, setFinishPoint] = useState(0);\r\n    const [hour, setHour] = useState(2);\r\n    const [min, setMin] = useState(15);\r\n    const [eta, setEta] = useState()\r\n    const [weighting, setWeigting] = useState([])\r\n    const { t } = useTranslation();\r\n\r\n    let equation = [7.2718, 4.2238, 3.2606, 2.6337, 2.2234, 1.6402, 1.4081, 1.2645, 1.1197]\r\n\r\n\r\n\r\n    let AccumEPDistance = (data) => {\r\n        if (data) {\r\n            let EPDistance = []\r\n            for (let i = 0; i < data.length; i++) {\r\n                if (i === 0)\r\n                    EPDistance[i] = data[i]['effort point'] + data[i + 1]['effort point']\r\n                else if (i < data.length - 3)\r\n                    EPDistance[i] = EPDistance[i - 1] + data[i + 1]['effort point']\r\n            }\r\n            let arr = []\r\n            arr.push((equation[finishPoint] * (hour + min / 60)).toFixed(2))\r\n            arr.push(((hour + min / 60) * EPDistance[EPDistance.length - 1] / EPDistance[finishPoint]).toFixed(2))\r\n            arr.push(((hour + min / 60) * Math.pow(EPDistance[EPDistance.length - 1] / EPDistance[finishPoint], 1.06)).toFixed(2))\r\n            setEta(arr)\r\n            let tmpWeighting = [[], [], []]\r\n            tmpWeighting[0] = equation.map((item, index) => {\r\n                if (index === 0)\r\n                    return 1 / item\r\n                else\r\n                    return 1 / item - (1 / equation[index - 1])\r\n            })\r\n            tmpWeighting[0].push(1 - 1 / equation[equation.length - 1])\r\n\r\n            // set weighting for chung and chungplus method\r\n            for (let i = 0; i < data.length; i++) {\r\n                if (i !== 0 && i !== data.length - 1)\r\n                    tmpWeighting[1].push(data[i]['effort point'] / data[data.length - 1]['effort point'])\r\n            }\r\n            tmpWeighting[2] = tmpWeighting[1]\r\n            setWeigting(tmpWeighting)\r\n        }\r\n    }\r\n\r\n\r\n    let handleButtonClick = () => {\r\n        if (finishPoint !== null && hour !== null && min !== null) {\r\n            if (!bg) {\r\n                setFetching(true)\r\n                axios.get('https://api.npoint.io/aaa03b744297ade7313d')\r\n                    .then(function (response) {\r\n                        // handle success\r\n                        setBg(response.data)\r\n                        AccumEPDistance(response.data)\r\n                        setFetching(false)\r\n                    }).catch((error) => {\r\n                        console.log(error)\r\n                        alert(error)\r\n                        setFetching(false)\r\n                    })\r\n                    axios.get('https://api.npoint.io/302fdd3ac3998e83dd4f')\r\n                    .then(function (response) {\r\n                        // handle success\r\n                        setMethodResultData(response.data)\r\n                    })\r\n            } else {\r\n                AccumEPDistance(bg)\r\n            }\r\n\r\n        } else {\r\n            alert('Missing Field(s)!')\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Toolbar />\r\n            <div className={classes.root}>\r\n                <Paper elevation={1} className={classes.paper}>\r\n                    <div className={classes.contentWrapper}>\r\n                        <Typography variant=\"h3\" gutterBottom>\r\n                            {t('inputpredict.title')}\r\n                </Typography>\r\n                        <Typography variant=\"h5\" gutterBottom>\r\n                        {t('inputpredict.subtitle')}\r\n\r\n                </Typography>\r\n                    </div>\r\n                </Paper>\r\n                <Paper elevation={1} className={classes.paper}>\r\n                    <div className={classes.formgroup}>\r\n                        <TextField\r\n                            id=\"finish\"\r\n                            select\r\n                            label=\"Start Point\"\r\n                            helperText=\"Will Support Other Location Soon.\"\r\n                            variant=\"outlined\"\r\n                            disabled\r\n                            defaultValue='Starting Point/北潭沖'\r\n                        >\r\n                            {['Starting Point/北潭沖'].map((option) => (\r\n                                <MenuItem key={option} value={option}>\r\n                                    {option}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </TextField>\r\n                        <TextField\r\n                            id=\"finish\"\r\n                            select\r\n                            label=\"Finish Point\"\r\n                            value={finishPoint}\r\n                            onChange={e => setFinishPoint(e.target.value)}\r\n                            helperText=\"Please select your Finsih Point\"\r\n                            variant=\"outlined\"\r\n                        >\r\n                            {['cp2', 'cp3', 'cp4', 'cp5', 'cp6', 'cp7', 'cp8', 'cp9', 'cp10'].map((option, index) => (\r\n                                <MenuItem key={option} value={index}>\r\n                                    {option}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </TextField>\r\n                        <TextField\r\n                            id=\"hour\"\r\n                            select\r\n                            label=\"Hour used\"\r\n                            value={hour}\r\n                            onChange={e => setHour(e.target.value)}\r\n                            variant=\"outlined\"\r\n                        >\r\n                            {[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30].map((option) => (\r\n                                <MenuItem key={option} value={option}>\r\n                                    {option}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </TextField>\r\n                        <TextField\r\n                            id=\"finish\"\r\n                            select\r\n                            label=\"Minute used\"\r\n                            value={min}\r\n                            onChange={e => setMin(e.target.value)}\r\n                            variant=\"outlined\"\r\n                        >\r\n                            {[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59].map((option) => (\r\n                                <MenuItem key={option} value={option}>\r\n                                    {option}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </TextField>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            size=\"large\"\r\n                            fullWidth\r\n                            endIcon={<SendIcon />}\r\n                            onClick={handleButtonClick}\r\n                        >\r\n                            Predict My HK100 Result\r\n                </Button>\r\n                    </div>\r\n                </Paper>\r\n                {(methodResultData && bg && eta && weighting.length === 3) ?\r\n\r\n                    <Paper elevation={1} >\r\n                        <div className={classes.resultWrapper}>\r\n                            <Typography variant=\"h5\" style={{marginBottom: '50px'}} >\r\n                            {t('checkranking.modelintro')}\r\n                <Link style={{ textDecoration: 'none' }} target=\"_blank\" to={`${process.env.PUBLIC_URL}/hk100predict`} >{t('checkranking.modelintro2')} </Link>\r\n                            </Typography>\r\n                            {['Past Data', 'Chung', 'ChungPlus'].map((item, index) => {\r\n                                return <React.Fragment key={index}>\r\n                                    <Typography variant=\"h4\" gutterBottom>\r\n                                        {item} {t('inputpredict.eta')} {eta[index]} Hours\r\n                                    </Typography>\r\n                                    <Typography variant=\"h5\">\r\n                                         {t('inputpredict.split')}\r\n                                        </Typography>\r\n                                    <GeneralTable\r\n                                        header={['Check Point', 'Distance (km)', 'Estimated Split Time (Hr)', 'Estimated  Pace (km/h)', 'Estimated EP Pace (km/h)']}\r\n                                        content={['cp2', 'cp3', 'cp4', 'cp5', 'cp6', 'cp7', 'cp8', 'cp9', 'cp10', 'Finish'].map((item2, index2) => {\r\n                                            if (index2 > finishPoint)\r\n                                                return [item2, bg[index2 + 1]['dist'], (eta[index] * weighting[index][index2]).toFixed(2),\r\n                                                    (bg[index2 + 1].dist / (eta[index] * weighting[index][index2])).toFixed(2),\r\n                                                    (bg[index2 + 1]['effort point'] / (eta[index] * weighting[index][index2])).toFixed(2)]\r\n                                        })}\r\n                                        align={'center'}\r\n                                    />\r\n                                    <div className={classes.probiTableWrapper}>\r\n                                        <Typography variant=\"h5\">\r\n                                            {`${item} ${t('inputpredict.acc')} `}\r\n                                        </Typography>\r\n                                        {index === 0 ? <GeneralTable\r\n                                            header={['Predicted Time and Actual Time within:', 'Probability']}\r\n                                            content={['0.5Hr', '1Hr', '1.5Hr', '2Hr', '2.5Hr', '3Hr', '3.5Hr', '4Hr'].map((item, index2) => {\r\n                                                return [item, methodResultData[index][index2][`cp${finishPoint + 2}`].toFixed(4)]\r\n                                            })}\r\n                                            size={'small'}\r\n                                            align={'center'}\r\n                                            width='50%'\r\n                                        /> :\r\n                                            <GeneralTable\r\n                                                header={['Predicted Time and Actual Time within:', 'Probability']}\r\n                                                content={['0.5Hr', '1Hr', '1.5Hr', '2Hr', '2.5Hr', '3Hr', '3.5Hr', '4Hr', '4.5Hr', '5Hr', '5.5Hr', '6Hr'].map((item, index2) => {\r\n                                                    return [item, methodResultData[index][index2][`sp${finishPoint + 2}`].toFixed(4)]\r\n                                                })}\r\n                                                size={'small'}\r\n                                                align={'center'}\r\n                                                width='50%'\r\n                                            />\r\n                                        }\r\n                                    </div>\r\n\r\n                                    <div style={{ marginBottom: '75px' }}></div>\r\n                                </React.Fragment>\r\n                            })}\r\n\r\n                        </div>\r\n                    </Paper>\r\n\r\n\r\n\r\n\r\n                    : fetching && <LargeTextPaperSkeleton />\r\n                }\r\n\r\n            </div>\r\n        </React.Fragment>\r\n\r\n    )\r\n}\r\nexport default HK1100PredictMyResult;\r\n","import React from 'react';\r\n\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport PredictTextField from \"../Component/PredictTextField\"\r\nimport StatWrapper from '../Component/StatWrapper'\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `full-width-tab-${index}`,\r\n        'aria-controls': `full-width-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root:{\r\n        maxWidth: \"1600px\",\r\n        margin: '0 auto',\r\n        padding: '10px',\r\n        [theme.breakpoints.up('md')]: {\r\n            padding: '20px',\r\n        },\r\n    },\r\n    tab: {\r\n        minWidth: 150\r\n    },\r\n    contentWrapper: {\r\n        maxWidth: 1000,\r\n        margin: '0 auto',\r\n        padding: '10px',\r\n        [theme.breakpoints.up('sm')]: {\r\n            padding: '50px 50px'\r\n        },\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    },\r\n    firstPaper: {\r\n        marginBottom: 15\r\n    },\r\n    imgresponsive: {\r\n        width: \"100%\",\r\n        height: 'auto'\r\n    }\r\n\r\n}));\r\n\r\nfunction HK100() {\r\n    const classes = useStyles();\r\n\r\n    const { t } = useTranslation();\r\n\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <Toolbar />\r\n            <div className={classes.root}>\r\n            <Paper elevation={1} className={classes.firstPaper}>\r\n                <div className={classes.contentWrapper}>\r\n                    <img src=\"https://i.imgur.com/w5yjUfD.jpg\" alt=\"hk100\" className={classes.imgresponsive} />\r\n                    <div style={{ marginBottom: '50px' }}></div>\r\n\r\n                    <Typography variant=\"h3\" gutterBottom>\r\n                        {t('about.About HK100 · Home')}\r\n                    </Typography>\r\n                    <Typography variant=\"h5\" gutterBottom>\r\n                        {t('about.website created by')}\r\n                    </Typography>\r\n\r\n                    <div style={{ marginBottom: '25px' }}></div>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                        {t('about.Purpose of establishment')}\r\n                    </Typography>\r\n                    <Typography variant=\"body1\" >\r\n                        {t('about.Analysis of HK100 statistics')}\r\n                    </Typography>\r\n                    <Typography variant=\"body1\" >\r\n                        {t('about.Help participants analyze their personal results')}\r\n                    </Typography>\r\n                    <Typography variant=\"body1\" >\r\n                        {t('about.Provide the best prediction model')}\r\n                    </Typography>\r\n                    <div style={{ marginBottom: '50px' }}></div>\r\n\r\n                    <Typography variant=\"h4\" gutterBottom>\r\n                        {t('about.Support us')}\r\n                    </Typography>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                        {t('about.Support method')}\r\n                    </Typography>\r\n                    <Typography variant=\"body1\" >\r\n                        {t('about.Use the website')}\r\n                    </Typography>\r\n                    <Typography variant=\"body1\" >\r\n                        {t('about.Promote to those around you')}\r\n                    </Typography>\r\n                    <Typography variant=\"body1\" >\r\n                        {t('about.Provide suggestions for improvement')}\r\n                    </Typography>\r\n                    <div style={{ marginBottom: '50px' }}></div>\r\n\r\n                    <Typography variant=\"h4\" gutterBottom>\r\n                        {t('about.Conatact Us')}\r\n                    </Typography>\r\n                    <Typography variant=\"body1\" gutterBottom>\r\n                        {t('about.Email')} hk100analysis@gmail.com\r\n                    </Typography>\r\n                    <a target=\"_blank\" href='https://www.linkedin.com/in/justin-so-4599bb162/'>\r\n                        <img src=\"https://i.imgur.com/Zze1JVh.png\" alt=\"LinkedIn\" style={{ width: '100px' }} />\r\n\r\n                    </a>\r\n\r\n\r\n\r\n\r\n                </div>\r\n            </Paper>\r\n            </div>\r\n\r\n        </React.Fragment>\r\n\r\n    )\r\n}\r\nexport default HK100;\r\n","import React from 'react';\r\n\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Link } from \"react-router-dom\";\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport PredictTextField from \"../Component/PredictTextField\"\r\nimport StatWrapper from '../Component/StatWrapper'\r\nimport { TextareaAutosize } from '@material-ui/core';\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `full-width-tab-${index}`,\r\n        'aria-controls': `full-width-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        background: 'white'\r\n    },\r\n    tab: {\r\n        minWidth: 150\r\n    },\r\n    contentWrapper: {\r\n        maxWidth: 1920,\r\n        margin: '0 auto',\r\n        [theme.breakpoints.up('md')]: {\r\n            padding: '25px'\r\n        },\r\n\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    },\r\n    firstPaper: {\r\n        marginBottom: 15\r\n    },\r\n    imgresponsive: {\r\n        width: \"100%\",\r\n        height: 'auto'\r\n    },\r\n    gridItem: {\r\n        marginBottom: '25px',\r\n        padding: '10px',\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto'\r\n    },\r\n    navButton: {\r\n        marginBottom: '5px',\r\n\r\n    }\r\n\r\n}));\r\n\r\nfunction HK100() {\r\n    const classes = useStyles();\r\n\r\n    const { t } = useTranslation();\r\n\r\n    return (\r\n        <div>\r\n            <Toolbar />\r\n            {/* <Paper elevation={1} className={classes.firstPaper}> */}\r\n            <div className={classes.root}>\r\n                <div className={classes.contentWrapper}>\r\n                    <Grid container justify={'center'} alignItems=\"center\">\r\n                        <Grid md={5} item className={classes.gridItem}>\r\n                            <Typography variant=\"h6\" gutterBottom>\r\n                                <strong> {t('home.be better prepared')}</strong>\r\n                            </Typography>\r\n                            <ul>\r\n                                <li>\r\n                                    <Typography variant=\"body1\" gutterBottom>\r\n                                        {t('home.Analyze your training data and predict your HK100 completion time')}\r\n                                    </Typography>\r\n                                </li>\r\n                                <li>\r\n                                    <Typography variant=\"body1\" gutterBottom>\r\n                                        {t('home.Analyze your HK100 past results and find the best prediction model')}\r\n                                    </Typography>\r\n                                </li>\r\n                            </ul>\r\n                            <Typography variant=\"h6\" gutterBottom>\r\n                                <strong>       {t('home.Start Now')}</strong>\r\n                            </Typography>\r\n\r\n                            <Button className={classes.navButton} color=\"primary\" disableElevation component={Link} to={`${process.env.PUBLIC_URL}/hk100predict`}>  {t('menu.1')}</Button>\r\n                            <Button className={classes.navButton} color=\"primary\" disableElevation component={Link} to={`${process.env.PUBLIC_URL}/hk100stat`}>  {t('menu.2')}</Button>\r\n                            <Button className={classes.navButton} color=\"primary\" disableElevation component={Link} to={`${process.env.PUBLIC_URL}/hk100checkranking`}>  {t('menu.3')}</Button>\r\n                            <Button className={classes.navButton} color=\"primary\" disableElevation component={Link} to={`${process.env.PUBLIC_URL}/hk100predictmyresult`}>  {t('menu.4')}</Button>\r\n                        </Grid>\r\n                        <Grid item md={6} lg={5} xs={12} className={classes.gridItem}>\r\n                            <div>\r\n                                <img src=\"https://i.imgur.com/1ayo7cR.jpg\" alt=\"hk100\" className={classes.imgresponsive} />\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container justify={'center'} alignItems=\"center\">\r\n\r\n\r\n                        <Grid item md={6} lg={5} xs={12} className={classes.gridItem}>\r\n                            <img src=\"https://i.imgur.com/uBv2FrS.jpg\" alt=\"hk100\" className={classes.imgresponsive} />\r\n\r\n\r\n                        </Grid>\r\n                        <Grid item md={5} xs={11} className={classes.gridItem}>\r\n                            <Typography variant=\"h6\" gutterBottom>\r\n                                <strong> {t('home.Analyze My HK100 Result')}</strong>\r\n                            </Typography>\r\n                            <ul>\r\n                                <li>\r\n                                    <Typography variant=\"body1\" gutterBottom>\r\n                                        {t('home.Find the best prediction model')}\r\n                                    </Typography>\r\n                                </li>\r\n                                <li>\r\n                                    <Typography variant=\"body1\" gutterBottom>\r\n                                        {t('home.Find your HK100 split time')}\r\n                                    </Typography>\r\n                                </li>\r\n                                <li>\r\n                                    <Typography variant=\"body1\" gutterBottom>\r\n                                        {t('home.Find segment ranking')}\r\n                                    </Typography>\r\n                                </li>\r\n                                <li>\r\n                                    <Typography variant=\"body1\" gutterBottom>\r\n                                        {t('home.Analysis of HK100 runner time distribution')}\r\n                                    </Typography>\r\n                                </li>\r\n                            </ul>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container justify={'center'} alignItems=\"center\">\r\n\r\n\r\n                        <Grid item md={5} xs={11} className={classes.gridItem}>\r\n                            <Typography variant=\"h6\" gutterBottom>\r\n                                <strong> {t('home.Predict My HK100 Result')}</strong>\r\n                            </Typography>\r\n                            <ul>\r\n                                <li>\r\n                                    <Typography variant=\"body1\" gutterBottom>\r\n                                        {t('home.Enter training data')}\r\n                                    </Typography>\r\n                                </li>\r\n                                <li>\r\n                                    <Typography variant=\"body1\" gutterBottom>\r\n                                        {t('home.Provide 3 different HK100 prediction models and their accuracy')}\r\n                                    </Typography>\r\n                                </li>\r\n                                <li>\r\n                                    <Typography variant=\"body1\" gutterBottom>\r\n                                        {t('home.Predict runner completion time')}\r\n                                    </Typography>\r\n                                </li>\r\n                                <li>\r\n                                    <Typography variant=\"body1\" gutterBottom>\r\n                                        {t('home.Estimate runner segment time')}\r\n                                    </Typography>\r\n                                </li>\r\n                            </ul>\r\n\r\n\r\n                        </Grid>\r\n                        <Grid item md={6} lg={5} xs={12} className={classes.gridItem}>\r\n                            <div>\r\n                                <img src=\"https://i.imgur.com/3kj8s69.jpg\" alt=\"hk100\" className={classes.imgresponsive} />\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container justify={'center'} alignItems=\"center\">\r\n\r\n\r\n                        <Grid item md={6} lg={5} xs={12} className={classes.gridItem}>\r\n                            <div>\r\n                                <img src=\"https://i.imgur.com/eroQRjI.jpg\" alt=\"hk100\" className={classes.imgresponsive} />\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item md={5} xs={11} className={classes.gridItem}>\r\n                            <Typography variant=\"h6\" gutterBottom>\r\n                                <strong> {t('home.Race Prediction Model')}</strong>\r\n                            </Typography>\r\n                            <ul>\r\n                                <li>\r\n                                    <Typography variant=\"body1\" gutterBottom>\r\n                                        {t('home.Compare three HK100 completion time prediction models')}\r\n                                    </Typography>\r\n                                </li>\r\n                                <li>\r\n                                    <Typography variant=\"body1\" gutterBottom>\r\n                                        {t('home.Introduction of principles and assumptions behind')}\r\n                                    </Typography>\r\n                                </li>\r\n                                <li>\r\n                                    <Typography variant=\"body1\" gutterBottom>\r\n                                        {t('home.Analyze the accuracy of the model')}\r\n                                    </Typography>\r\n                                </li>\r\n\r\n                            </ul>\r\n                        </Grid>\r\n\r\n\r\n                    </Grid>\r\n                    <Grid container justify={'center'} alignItems=\"center\">\r\n\r\n\r\n                        <Grid item md={5} xs={11} className={classes.gridItem}>\r\n                            <Typography variant=\"h6\" gutterBottom>\r\n                                <strong>{t('home.HK100 Statistics')}</strong>\r\n                            </Typography>\r\n                            <ul>\r\n                                <li>\r\n                                    <Typography variant=\"body1\" gutterBottom>\r\n                                        {t('home.Listed statistics of each segment')}\r\n                                    </Typography>\r\n                                </li>\r\n                                <li>\r\n                                    <Typography variant=\"body1\" gutterBottom>\r\n                                        {t('home.Median, standard deviation, mean, etc.')}\r\n                                    </Typography>\r\n                                </li>\r\n                                <li>\r\n                                    <Typography variant=\"body1\" gutterBottom>\r\n                                        {t('home.Provide detailed time distribution chart of HK100 participants')}\r\n                                    </Typography>\r\n                                </li>\r\n                            </ul>\r\n\r\n                        </Grid>\r\n                        <Grid item md={6} lg={5} xs={12} className={classes.gridItem}>\r\n                            <div>\r\n                                <img src=\"https://i.imgur.com/rognDD2.jpgg\" alt=\"hk100\" className={classes.imgresponsive} />\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container >\r\n                        <Grid className={classes.gridItem} >\r\n                            <Typography style={{ textAlign: 'center' }} variant=\"h4\" gutterBottom>\r\n                                <strong>  {t('home.Try Now')}!</strong>\r\n                            </Typography>\r\n\r\n                            <Button className={classes.navButton} style={{ display: 'block' }} color=\"primary\" size=\"large\" disableElevation component={Link} to={`${process.env.PUBLIC_URL}/hk100predict`}>  {t('menu.1')}</Button>\r\n                            <Button className={classes.navButton} style={{ display: 'block' }} color=\"primary\" size=\"large\" disableElevation component={Link} to={`${process.env.PUBLIC_URL}/hk100stat`}>  {t('menu.2')}</Button>\r\n                            <Button className={classes.navButton} style={{ display: 'block' }} color=\"primary\" size=\"large\" disableElevation component={Link} to={`${process.env.PUBLIC_URL}/hk100checkranking`}>  {t('menu.3')}</Button>\r\n                            <Button className={classes.navButton} style={{ display: 'block' }} color=\"primary\" size=\"large\" disableElevation component={Link} to={`${process.env.PUBLIC_URL}/hk100predictmyresult`}>  {t('menu.4')}</Button>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n            {/* // </Paper> */}\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default HK100;\r\n","\r\nimport React, { useState } from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport TranslateIcon from '@material-ui/icons/Translate';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport { createBrowserHistory } from \"history\";\r\nimport Button from '@material-ui/core/Button';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport TimerIcon from '@material-ui/icons/Timer';\r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport { useTranslation } from 'react-i18next';\r\nimport getLanguage from \"../getLanguage\"\r\n\r\nimport {\r\n\r\n    Link\r\n  } from \"react-router-dom\";\r\n  const drawerWidth = 240;\r\nconst useStyles = makeStyles((theme) => ({\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      background: 'white',\r\n      color: 'black'\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n    },\r\n    drawerContainer: {\r\n      overflow: 'auto',\r\n    },\r\n    appBarContent: {\r\n      [theme.breakpoints.up('md')]: {\r\n        // display: 'flex',\r\n        // justifyContent: \"space-between\"\r\n      },\r\n    },\r\n    homeName: {\r\n      // [theme.breakpoints.down('sm')]: {\r\n      flexGrow: 1\r\n      // },\r\n    }\r\n  }));\r\n\r\nexport default function Header(){\r\n  const classes = useStyles();\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [drawer, setDrawer] = useState(false);\r\n    const { t, i18n } = useTranslation();\r\n    // const theme = useTheme();\r\n    const showmenu = !useMediaQuery(useTheme().breakpoints.up('md'));\r\n  \r\n    const handleClick = (event) => {\r\n      setAnchorEl(event.currentTarget);\r\n    };\r\n    const handLangChange = (val) => {\r\n      setAnchorEl(null);\r\n      i18n.changeLanguage(val)\r\n    }\r\n    const handleClose = () => {\r\n      setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <AppBar position=\"fixed\" className={classes.appBar}>\r\n            <Toolbar className={classes.appBarContent}>\r\n              {showmenu && <IconButton\r\n                color=\"inherit\"\r\n                aria-label=\"open drawer\"\r\n                onClick={() => setDrawer(true)}\r\n                edge=\"start\"\r\n              >\r\n                <MenuIcon />\r\n              </IconButton>}\r\n\r\n              <Typography className={classes.homeName} component={Link} to={`${process.env.PUBLIC_URL}/`} variant=\"h6\" noWrap style={{ color: 'black', textDecoration: 'none' }}>{t('homename')} </Typography>\r\n              {!showmenu &&\r\n                <div style={{ marginRight: '50px' }}>\r\n                  <Button component={Link} to={`${process.env.PUBLIC_URL}/hk100predict`} ><Typography varient=\"body1\">{t('menu.1')}</Typography> </Button>\r\n                  <Button component={Link} to={`${process.env.PUBLIC_URL}/hk100stat`} ><Typography varient=\"body1\">{t('menu.2')}</Typography></Button>\r\n                  <Button component={Link} to={`${process.env.PUBLIC_URL}/hk100checkranking`} ><Typography varient=\"body1\">{t('menu.3')}</Typography></Button>\r\n                  <Button component={Link} to={`${process.env.PUBLIC_URL}/hk100predictmyresult`} ><Typography varient=\"body1\">{t('menu.4')}</Typography></Button>\r\n                </div>\r\n              }\r\n              <div>\r\n                {!showmenu &&\r\n                  <Button\r\n                    component={Link} to={`${process.env.PUBLIC_URL}/about`}\r\n                    startIcon={<InfoIcon />}\r\n                    style={{ marginRight: '15px' }}\r\n                  >\r\n                    <Typography varient=\"body1\"> {\"About\"}</Typography>\r\n                  </Button>}\r\n                <Button\r\n                  onClick={handleClick}\r\n                  startIcon={<TranslateIcon />}\r\n                  endIcon={<KeyboardArrowDownIcon />}\r\n                >\r\n                  <Typography varient=\"body1\">  {getLanguage() === 'en' ? \"English\" : \"中文\"}</Typography>\r\n                </Button>\r\n                <Menu\r\n                  id=\"simple-menu\"\r\n                  anchorEl={anchorEl}\r\n                  keepMounted\r\n                  open={Boolean(anchorEl)}\r\n                  onClose={handleClose}\r\n                >\r\n                  <MenuItem onClick={() => handLangChange('en')}>English</MenuItem>\r\n                  <MenuItem onClick={() => handLangChange('zh')}>中文</MenuItem>\r\n                </Menu>\r\n              </div>\r\n\r\n\r\n            </Toolbar>\r\n          </AppBar>\r\n          {showmenu && <Drawer\r\n            className={classes.drawer}\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            open={drawer} onClose={() => setDrawer(false)}\r\n          >\r\n\r\n\r\n            <div className={classes.drawerContainer}>\r\n              <List>\r\n                <ListItem button onClick={() => setDrawer(false)} component={Link} to={`${process.env.PUBLIC_URL}`} >\r\n                  <ListItemIcon> <HomeIcon /></ListItemIcon>\r\n                  <ListItemText primary={t('homename')} />\r\n                </ListItem>\r\n                <Divider />\r\n              </List>\r\n              <List>\r\n                <ListItem button onClick={() => setDrawer(false)} component={Link} to={`${process.env.PUBLIC_URL}/hk100predict`} >\r\n                  <ListItemIcon> <ShowChartIcon /></ListItemIcon>\r\n                  <ListItemText primary={t('menu.1')} />\r\n                </ListItem>\r\n                <ListItem button onClick={() => setDrawer(false)} component={Link} to={`${process.env.PUBLIC_URL}/hk100stat`} >\r\n                  <ListItemIcon> <EqualizerIcon /></ListItemIcon>\r\n                  <ListItemText primary={t('menu.2')} />\r\n                </ListItem>\r\n                <ListItem button onClick={() => setDrawer(false)} component={Link} to={`${process.env.PUBLIC_URL}/hk100checkranking`} >\r\n                  <ListItemIcon> <PersonIcon /></ListItemIcon>\r\n                  <ListItemText primary={t('menu.3')} />\r\n                </ListItem>\r\n                <ListItem button onClick={() => setDrawer(false)} component={Link} to={`${process.env.PUBLIC_URL}/hk100predictmyresult`} >\r\n                  <ListItemIcon> <TimerIcon /></ListItemIcon>\r\n                  <ListItemText primary={t('menu.4')} />\r\n                </ListItem>\r\n                <Divider />\r\n              </List>\r\n              <List>\r\n                <ListItem button onClick={() => setDrawer(false)} component={Link} to={`${process.env.PUBLIC_URL}/about`} >\r\n                  <ListItemIcon><InfoIcon /></ListItemIcon>\r\n                  <ListItemText primary={\"About\"} />\r\n                </ListItem>\r\n                <Divider />\r\n              </List>\r\n\r\n            </div>\r\n          </Drawer>}\r\n        </React.Fragment>\r\n    )\r\n}","import i18n from 'i18next';\r\n\r\nexport default function getLanguage() {\r\n  return i18n.language ||\r\n    (typeof window !== 'undefined' && window.localStorage.i18nextLng) ||\r\n    'en';\r\n};","import React, { useState } from 'react';\r\nimport { makeStyles, unstable_createMuiStrictModeTheme as createMuiTheme, useTheme } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport { createBrowserHistory } from \"history\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport HK100Stat from \"./Container/HK100Stat\"\r\nimport HK100Predict from \"./Container/HK100Predict\"\r\nimport HK100CheckRanking from \"./Container/HK100CheckRanking\"\r\nimport HK1100PredictMyResult from \"./Container/HK1100PredictMyResult\"\r\nimport About from \"./Container/About\"\r\nimport Home from \"./Container/Home\"\r\nimport Header from \"./Component/Header\"\r\n\r\nconst history = createBrowserHistory();\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n    fontFamily: [\r\n      '微軟正黑體',\r\n      'Nunito',\r\n      'Roboto',\r\n      '\"Helvetica Neue\"',\r\n      'Arial',\r\n      'sans-serif'\r\n    ].join(','),\r\n  }\r\n});\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  content: {\r\n    width: '100%'\r\n  },\r\n}));\r\nexport default function App() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Router history={history}>\r\n      <ThemeProvider theme={theme}>\r\n        <div className={classes.root}>\r\n\r\n          <CssBaseline />\r\n          <Header />\r\n          <div className={classes.content}>\r\n            <Switch>\r\n              <Route path={`${process.env.PUBLIC_URL}/hk100stat`} exact component={HK100Stat} />\r\n              <Route path={`${process.env.PUBLIC_URL}/hk100predict`} exact component={HK100Predict} />\r\n              <Route path={`${process.env.PUBLIC_URL}/hk100checkranking`} exact component={HK100CheckRanking} />\r\n              <Route path={`${process.env.PUBLIC_URL}/hk100predictmyresult`} exact component={HK1100PredictMyResult} />\r\n              <Route path={`${process.env.PUBLIC_URL}/about`} exact component={About} />\r\n              <Route path={`${process.env.PUBLIC_URL}/`} component={Home} />\r\n\r\n\r\n            </Switch>\r\n\r\n          </div>\r\n        </div>\r\n      </ThemeProvider>\r\n    </Router>\r\n\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import i18n from \"i18next\";\r\nimport { initReactI18next   } from \"react-i18next\";\r\nimport en from './Lang/en.json'\r\nimport zh from './Lang/zh.json'\r\nimport detector  from 'i18next-browser-languagedetector';\r\n\r\nconst resources = {\r\n    'en': {\r\n        translation: en,\r\n    },\r\n    'zh': {\r\n        translation: zh,\r\n    },\r\n};\r\ni18n\r\n  .use(detector)\r\n  .use(initReactI18next ) // passes i18n down to react-i18next\r\n  .init({\r\n    resources,\r\n    fallbackLng: \"en\", // use en if detected lng is not available\r\n    interpolation: {\r\n      escapeValue: false // react already safes from xss\r\n    }\r\n  });\r\n// i18n\r\n//     .use(initReactI18next) // passes i18n down to react-i18next\r\n//     .init({\r\n//         resources,\r\n//         // lng: \"en\",\r\n\r\n//         //keySeparator: false, // we do not use keys in form messages.welcome\r\n\r\n//         interpolation: {\r\n//             escapeValue: false // react already safes from xss\r\n//         }\r\n//     });\r\n\r\nexport default i18n;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './i18n';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}